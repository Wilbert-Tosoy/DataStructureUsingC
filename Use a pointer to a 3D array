#include <stdio.h>

//Declaration of functions.
void read_array(int page, int row, int column, int (*pointer_array)[row][column]);
void display_array(int page, int row, int column, int (*pointer_array)[row][column]);

// Use a pointer to a three-dimensional array.
int main() {
    // Declaration and initialization of variables.
    int page, row, column;
    printf("Enter the number of page: ");
    scanf("%d", &page);
    printf("Enter the row size: ");
    scanf("%d", &row);
    printf("Enter the column size: ");
    scanf("%d", &column);

    // Declaration and initialization of 3D arrays.
    int matrix[page][row][column];
    int (*pointer_array)[row][column];
    pointer_array = matrix;
    read_array(page, row, column, pointer_array);

    // Display the elements.
    display_array(page, row, column, pointer_array);

    return 0;
}

// Function definition of read_array().
void read_array(int page, int row, int column, int (*pointer_array)[row][column]) {
    printf("\nEnter the elements\n");
    for (int i = 0; i < page; i++) {
        for (int j = 0; j < row; j++) {
            for (int k = 0; k < column; k++) {
                printf("Matrix [%d][%d][%d]: ", i, j, k);
                scanf("%d", &pointer_array[i][j][k]);
            }
        }
    }
}

void display_array(int page, int row, int column, int (*pointer_array)[row][column]) {
    printf("\nArray Elements\n");
    for (int i = 0; i < page; i++) {
        printf("Page %d\n", i + 1);
        for (int j = 0; j < row; j++) {
            for (int k = 0; k < column; k++) {
                printf("%d\t", *(*(*(pointer_array + i)+j)+k));
            }
        printf("\n");
        }
    }
}
